

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace JustStay.Repo
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class juststayDbEntities : DbContext
{
    public juststayDbEntities()
        : base("name=juststayDbEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<State> States { get; set; }

    public virtual DbSet<UserType> UserTypes { get; set; }

    public virtual DbSet<ATRCCategory> ATRCCategories { get; set; }

    public virtual DbSet<ATRCSubCategory> ATRCSubCategories { get; set; }

    public virtual DbSet<Role> Roles { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<ATRCAmenity> ATRCAmenities { get; set; }

    public virtual DbSet<City> Cities { get; set; }

    public virtual DbSet<FAQ> FAQs { get; set; }

    public virtual DbSet<Location> Locations { get; set; }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<SMSTemplate> SMSTemplates { get; set; }

    public virtual DbSet<Message> Messages { get; set; }

    public virtual DbSet<MessageRecipient> MessageRecipients { get; set; }

    public virtual DbSet<Blog> Blogs { get; set; }

    public virtual DbSet<BlogCategory> BlogCategories { get; set; }

    public virtual DbSet<Banner> Banners { get; set; }

    public virtual DbSet<Highlight> Highlights { get; set; }

    public virtual DbSet<Cuisine> Cuisines { get; set; }

    public virtual DbSet<Amenity> Amenities { get; set; }

    public virtual DbSet<Offer> Offers { get; set; }

    public virtual DbSet<CustomerRequest> CustomerRequests { get; set; }

    public virtual DbSet<ATRCType> ATRCTypes { get; set; }

    public virtual DbSet<RestChairType> RestChairTypes { get; set; }

    public virtual DbSet<RestChairProfile> RestChairProfiles { get; set; }

    public virtual DbSet<RoomType> RoomTypes { get; set; }

    public virtual DbSet<RoomLabel> RoomLabels { get; set; }

    public virtual DbSet<Attachment> Attachments { get; set; }

    public virtual DbSet<CancellationPolicy> CancellationPolicies { get; set; }

    public virtual DbSet<ATRCRestChair> ATRCRestChairs { get; set; }

    public virtual DbSet<ATRCChair> ATRCChairs { get; set; }

    public virtual DbSet<ATRC> ATRCs { get; set; }

    public virtual DbSet<RCBookingDetail> RCBookingDetails { get; set; }

    public virtual DbSet<ErrorLog> ErrorLogs { get; set; }

    public virtual DbSet<ATRCImage> ATRCImages { get; set; }

    public virtual DbSet<RestChairBooking> RestChairBookings { get; set; }

    public virtual DbSet<Setting> Settings { get; set; }

    public virtual DbSet<PrivacyPolicy> PrivacyPolicies { get; set; }

    public virtual DbSet<RCRefund> RCRefunds { get; set; }

    public virtual DbSet<ATRCAccount> ATRCAccounts { get; set; }

    public virtual DbSet<Company> Companies { get; set; }

    public virtual DbSet<CompanyAccount> CompanyAccounts { get; set; }

    public virtual DbSet<ATRCBill> ATRCBills { get; set; }

    public virtual DbSet<RCPayment> RCPayments { get; set; }

    public virtual DbSet<JSBill> JSBills { get; set; }

    public virtual DbSet<Tax> Taxes { get; set; }

    public virtual DbSet<Rating> Ratings { get; set; }


    public virtual ObjectResult<ATRCDetail> GetAllATRCRegistarions(Nullable<int> status)
    {

        var statusParameter = status.HasValue ?
            new ObjectParameter("Status", status) :
            new ObjectParameter("Status", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ATRCDetail>("GetAllATRCRegistarions", statusParameter);
    }


    public virtual ObjectResult<UserDetail> GetUserDetail()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserDetail>("GetUserDetail");
    }


    public virtual ObjectResult<GetLocationDetails> GetLocation(Nullable<int> cityId)
    {

        var cityIdParameter = cityId.HasValue ?
            new ObjectParameter("CityId", cityId) :
            new ObjectParameter("CityId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLocationDetails>("GetLocation", cityIdParameter);
    }


    public virtual ObjectResult<EmailInfo> GetEmailsList(string userName, string mode)
    {

        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var modeParameter = mode != null ?
            new ObjectParameter("Mode", mode) :
            new ObjectParameter("Mode", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmailInfo>("GetEmailsList", userNameParameter, modeParameter);
    }


    public virtual ObjectResult<InboxMail> GetInboxMails(string search, Nullable<int> userId, string mode)
    {

        var searchParameter = search != null ?
            new ObjectParameter("Search", search) :
            new ObjectParameter("Search", typeof(string));


        var userIdParameter = userId.HasValue ?
            new ObjectParameter("UserId", userId) :
            new ObjectParameter("UserId", typeof(int));


        var modeParameter = mode != null ?
            new ObjectParameter("Mode", mode) :
            new ObjectParameter("Mode", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InboxMail>("GetInboxMails", searchParameter, userIdParameter, modeParameter);
    }


    public virtual ObjectResult<MessgeInfo> GetMessgeById(Nullable<int> messageId)
    {

        var messageIdParameter = messageId.HasValue ?
            new ObjectParameter("MessageId", messageId) :
            new ObjectParameter("MessageId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MessgeInfo>("GetMessgeById", messageIdParameter);
    }


    public virtual ObjectResult<SupportRequestDetail> GetAdminSupportRequests()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SupportRequestDetail>("GetAdminSupportRequests");
    }


    public virtual ObjectResult<Localities> GetAutocompleteLocalities(string search)
    {

        var searchParameter = search != null ?
            new ObjectParameter("Search", search) :
            new ObjectParameter("Search", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Localities>("GetAutocompleteLocalities", searchParameter);
    }


    public virtual int GetATRCCenters(Nullable<int> typeId, string mode)
    {

        var typeIdParameter = typeId.HasValue ?
            new ObjectParameter("TypeId", typeId) :
            new ObjectParameter("TypeId", typeof(int));


        var modeParameter = mode != null ?
            new ObjectParameter("Mode", mode) :
            new ObjectParameter("Mode", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetATRCCenters", typeIdParameter, modeParameter);
    }


    public virtual ObjectResult<BlogWithDetail> GetBlogWithDetail(Nullable<int> blogId)
    {

        var blogIdParameter = blogId.HasValue ?
            new ObjectParameter("BlogId", blogId) :
            new ObjectParameter("BlogId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BlogWithDetail>("GetBlogWithDetail", blogIdParameter);
    }


    public virtual int CheckRestChairAvailability(Nullable<int> aTRCId, Nullable<int> persons, string bookingFrom, Nullable<int> hours, ObjectParameter status)
    {

        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        var personsParameter = persons.HasValue ?
            new ObjectParameter("Persons", persons) :
            new ObjectParameter("Persons", typeof(int));


        var bookingFromParameter = bookingFrom != null ?
            new ObjectParameter("BookingFrom", bookingFrom) :
            new ObjectParameter("BookingFrom", typeof(string));


        var hoursParameter = hours.HasValue ?
            new ObjectParameter("Hours", hours) :
            new ObjectParameter("Hours", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckRestChairAvailability", aTRCIdParameter, personsParameter, bookingFromParameter, hoursParameter, status);
    }


    public virtual ObjectResult<Cust_ATRCBooking> GetATRCBookingsByCustomer(Nullable<int> customerId)
    {

        var customerIdParameter = customerId.HasValue ?
            new ObjectParameter("CustomerId", customerId) :
            new ObjectParameter("CustomerId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Cust_ATRCBooking>("GetATRCBookingsByCustomer", customerIdParameter);
    }


    public virtual ObjectResult<CustomerDetail> GetCustomerDetail(Nullable<int> customerId)
    {

        var customerIdParameter = customerId.HasValue ?
            new ObjectParameter("CustomerId", customerId) :
            new ObjectParameter("CustomerId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerDetail>("GetCustomerDetail", customerIdParameter);
    }


    public virtual ObjectResult<CustomerRequestDetail> GetAllCustomerRequests()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerRequestDetail>("GetAllCustomerRequests");
    }


    public virtual ObjectResult<GetAllRestChairsByATRCProfile> GetAllRestChairsByATRCProfile(Nullable<int> profileId)
    {

        var profileIdParameter = profileId.HasValue ?
            new ObjectParameter("ProfileId", profileId) :
            new ObjectParameter("ProfileId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllRestChairsByATRCProfile>("GetAllRestChairsByATRCProfile", profileIdParameter);
    }


    public virtual ObjectResult<GetRestChairbyId> GetRestChairbyId(Nullable<int> aTRCRestChairId)
    {

        var aTRCRestChairIdParameter = aTRCRestChairId.HasValue ?
            new ObjectParameter("ATRCRestChairId", aTRCRestChairId) :
            new ObjectParameter("ATRCRestChairId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRestChairbyId>("GetRestChairbyId", aTRCRestChairIdParameter);
    }


    public virtual ObjectResult<ATRCCenter> SearchATRCCenters(Nullable<decimal> minlat, Nullable<decimal> maxlat, Nullable<decimal> minLng, Nullable<decimal> maxLng, Nullable<int> cityId, string mode, string search, Nullable<System.DateTime> date, Nullable<int> hour)
    {

        var minlatParameter = minlat.HasValue ?
            new ObjectParameter("minlat", minlat) :
            new ObjectParameter("minlat", typeof(decimal));


        var maxlatParameter = maxlat.HasValue ?
            new ObjectParameter("maxlat", maxlat) :
            new ObjectParameter("maxlat", typeof(decimal));


        var minLngParameter = minLng.HasValue ?
            new ObjectParameter("minLng", minLng) :
            new ObjectParameter("minLng", typeof(decimal));


        var maxLngParameter = maxLng.HasValue ?
            new ObjectParameter("maxLng", maxLng) :
            new ObjectParameter("maxLng", typeof(decimal));


        var cityIdParameter = cityId.HasValue ?
            new ObjectParameter("CityId", cityId) :
            new ObjectParameter("CityId", typeof(int));


        var modeParameter = mode != null ?
            new ObjectParameter("Mode", mode) :
            new ObjectParameter("Mode", typeof(string));


        var searchParameter = search != null ?
            new ObjectParameter("search", search) :
            new ObjectParameter("search", typeof(string));


        var dateParameter = date.HasValue ?
            new ObjectParameter("Date", date) :
            new ObjectParameter("Date", typeof(System.DateTime));


        var hourParameter = hour.HasValue ?
            new ObjectParameter("hour", hour) :
            new ObjectParameter("hour", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ATRCCenter>("SearchATRCCenters", minlatParameter, maxlatParameter, minLngParameter, maxLngParameter, cityIdParameter, modeParameter, searchParameter, dateParameter, hourParameter);
    }


    public virtual ObjectResult<GetBookingDetailsByBookingId> GetBookingDetailsByBookingId(Nullable<int> restChairBookingId, Nullable<int> aTRCId)
    {

        var restChairBookingIdParameter = restChairBookingId.HasValue ?
            new ObjectParameter("RestChairBookingId", restChairBookingId) :
            new ObjectParameter("RestChairBookingId", typeof(int));


        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBookingDetailsByBookingId>("GetBookingDetailsByBookingId", restChairBookingIdParameter, aTRCIdParameter);
    }


    public virtual ObjectResult<GetRestChairByAtrcId> GetRestChairByAtrcId(Nullable<int> aTRCId, Nullable<System.DateTime> date, Nullable<int> hour)
    {

        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        var dateParameter = date.HasValue ?
            new ObjectParameter("Date", date) :
            new ObjectParameter("Date", typeof(System.DateTime));


        var hourParameter = hour.HasValue ?
            new ObjectParameter("Hour", hour) :
            new ObjectParameter("Hour", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRestChairByAtrcId>("GetRestChairByAtrcId", aTRCIdParameter, dateParameter, hourParameter);
    }


    public virtual ObjectResult<GetRestChairBookingByATRC> GetRestChairBookingByATRC(Nullable<int> aTRCId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, string paymentMode)
    {

        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));


        var todateParameter = todate.HasValue ?
            new ObjectParameter("Todate", todate) :
            new ObjectParameter("Todate", typeof(System.DateTime));


        var paymentModeParameter = paymentMode != null ?
            new ObjectParameter("PaymentMode", paymentMode) :
            new ObjectParameter("PaymentMode", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRestChairBookingByATRC>("GetRestChairBookingByATRC", aTRCIdParameter, fromDateParameter, todateParameter, paymentModeParameter);
    }


    public virtual ObjectResult<GetAllCustomerByATRC> GetAllCustomerByATRC(Nullable<int> aTRCId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate)
    {

        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));


        var todateParameter = todate.HasValue ?
            new ObjectParameter("Todate", todate) :
            new ObjectParameter("Todate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCustomerByATRC>("GetAllCustomerByATRC", aTRCIdParameter, fromDateParameter, todateParameter);
    }


    public virtual ObjectResult<GetCustomerBookingsByATRC> GetCustomerBookingsByATRC(Nullable<int> aTRCId, Nullable<int> customerId, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
    {

        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        var customerIdParameter = customerId.HasValue ?
            new ObjectParameter("CustomerId", customerId) :
            new ObjectParameter("CustomerId", typeof(int));


        var fromdateParameter = fromdate.HasValue ?
            new ObjectParameter("Fromdate", fromdate) :
            new ObjectParameter("Fromdate", typeof(System.DateTime));


        var todateParameter = todate.HasValue ?
            new ObjectParameter("Todate", todate) :
            new ObjectParameter("Todate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerBookingsByATRC>("GetCustomerBookingsByATRC", aTRCIdParameter, customerIdParameter, fromdateParameter, todateParameter);
    }


    public virtual ObjectResult<GetAllPaymentByCustomerId> GetAllPaymentByCustomerId(Nullable<int> customerId)
    {

        var customerIdParameter = customerId.HasValue ?
            new ObjectParameter("CustomerId", customerId) :
            new ObjectParameter("CustomerId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPaymentByCustomerId>("GetAllPaymentByCustomerId", customerIdParameter);
    }


    public virtual ObjectResult<GetAllRestChairProfile> GetAllRestChairProfile()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllRestChairProfile>("GetAllRestChairProfile");
    }


    public virtual ObjectResult<Nullable<int>> SP_Delete(Nullable<int> id, string mode)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("Id", id) :
            new ObjectParameter("Id", typeof(int));


        var modeParameter = mode != null ?
            new ObjectParameter("Mode", mode) :
            new ObjectParameter("Mode", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_Delete", idParameter, modeParameter);
    }


    public virtual ObjectResult<GetAllCustomersDetails> GetAllCustomersDetails(string serach)
    {

        var serachParameter = serach != null ?
            new ObjectParameter("Serach", serach) :
            new ObjectParameter("Serach", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCustomersDetails>("GetAllCustomersDetails", serachParameter);
    }


    public virtual ObjectResult<GetAllBookingByCustomerIdAndroid> GetAllBookingByCustomerIdAndroid(Nullable<int> customerId, string search)
    {

        var customerIdParameter = customerId.HasValue ?
            new ObjectParameter("CustomerId", customerId) :
            new ObjectParameter("CustomerId", typeof(int));


        var searchParameter = search != null ?
            new ObjectParameter("search", search) :
            new ObjectParameter("search", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllBookingByCustomerIdAndroid>("GetAllBookingByCustomerIdAndroid", customerIdParameter, searchParameter);
    }


    public virtual ObjectResult<GetAllPaymentByCustomerIdAndroid> GetAllPaymentByCustomerIdAndroid(Nullable<int> customerId)
    {

        var customerIdParameter = customerId.HasValue ?
            new ObjectParameter("CustomerId", customerId) :
            new ObjectParameter("CustomerId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllPaymentByCustomerIdAndroid>("GetAllPaymentByCustomerIdAndroid", customerIdParameter);
    }


    public virtual ObjectResult<GetAllOfflinePayment> GetAllOfflinePayment(Nullable<int> aTRCId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, string search)
    {

        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));


        var todateParameter = todate.HasValue ?
            new ObjectParameter("Todate", todate) :
            new ObjectParameter("Todate", typeof(System.DateTime));


        var searchParameter = search != null ?
            new ObjectParameter("Search", search) :
            new ObjectParameter("Search", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllOfflinePayment>("GetAllOfflinePayment", aTRCIdParameter, fromDateParameter, todateParameter, searchParameter);
    }


    public virtual ObjectResult<GetAllOnlinePayment> GetAllOnlinePayment(Nullable<int> aTRCId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, string search)
    {

        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));


        var todateParameter = todate.HasValue ?
            new ObjectParameter("Todate", todate) :
            new ObjectParameter("Todate", typeof(System.DateTime));


        var searchParameter = search != null ?
            new ObjectParameter("Search", search) :
            new ObjectParameter("Search", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllOnlinePayment>("GetAllOnlinePayment", aTRCIdParameter, fromDateParameter, todateParameter, searchParameter);
    }


    public virtual ObjectResult<GetAllBookingByCustomerId> GetAllBookingByCustomerId(Nullable<int> customerId, string search, string mode)
    {

        var customerIdParameter = customerId.HasValue ?
            new ObjectParameter("CustomerId", customerId) :
            new ObjectParameter("CustomerId", typeof(int));


        var searchParameter = search != null ?
            new ObjectParameter("search", search) :
            new ObjectParameter("search", typeof(string));


        var modeParameter = mode != null ?
            new ObjectParameter("mode", mode) :
            new ObjectParameter("mode", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllBookingByCustomerId>("GetAllBookingByCustomerId", customerIdParameter, searchParameter, modeParameter);
    }


    public virtual ObjectResult<GetBookingForCancelByCustomerId> GetBookingForCancelByCustomerId(Nullable<int> customerId, string mode)
    {

        var customerIdParameter = customerId.HasValue ?
            new ObjectParameter("CustomerId", customerId) :
            new ObjectParameter("CustomerId", typeof(int));


        var modeParameter = mode != null ?
            new ObjectParameter("mode", mode) :
            new ObjectParameter("mode", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBookingForCancelByCustomerId>("GetBookingForCancelByCustomerId", customerIdParameter, modeParameter);
    }


    public virtual ObjectResult<GetAllCancelledBooking> GetAllCancelledBooking(Nullable<int> aTRCId, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> toDate, string mode)
    {

        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        var fromdateParameter = fromdate.HasValue ?
            new ObjectParameter("Fromdate", fromdate) :
            new ObjectParameter("Fromdate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));


        var modeParameter = mode != null ?
            new ObjectParameter("mode", mode) :
            new ObjectParameter("mode", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCancelledBooking>("GetAllCancelledBooking", aTRCIdParameter, fromdateParameter, toDateParameter, modeParameter);
    }


    public virtual ObjectResult<GetAllRefunds> GetAllRefunds(Nullable<int> aTRCId, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> toDate, string mode)
    {

        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        var fromdateParameter = fromdate.HasValue ?
            new ObjectParameter("Fromdate", fromdate) :
            new ObjectParameter("Fromdate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));


        var modeParameter = mode != null ?
            new ObjectParameter("mode", mode) :
            new ObjectParameter("mode", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllRefunds>("GetAllRefunds", aTRCIdParameter, fromdateParameter, toDateParameter, modeParameter);
    }


    public virtual ObjectResult<ATRCOnlineBillingFromJuststay> ATRCOnlineBillingFromJuststay(Nullable<int> aTRCId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate)
    {

        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));


        var todateParameter = todate.HasValue ?
            new ObjectParameter("Todate", todate) :
            new ObjectParameter("Todate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ATRCOnlineBillingFromJuststay>("ATRCOnlineBillingFromJuststay", aTRCIdParameter, fromDateParameter, todateParameter);
    }


    public virtual ObjectResult<GetAllATRCBills> GetAllATRCBills(Nullable<int> aTRCId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<bool> isPaid)
    {

        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));


        var isPaidParameter = isPaid.HasValue ?
            new ObjectParameter("IsPaid", isPaid) :
            new ObjectParameter("IsPaid", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllATRCBills>("GetAllATRCBills", aTRCIdParameter, fromDateParameter, toDateParameter, isPaidParameter);
    }


    public virtual ObjectResult<GetATRCBillById> GetATRCBillById(Nullable<int> aTRCBillId)
    {

        var aTRCBillIdParameter = aTRCBillId.HasValue ?
            new ObjectParameter("ATRCBillId", aTRCBillId) :
            new ObjectParameter("ATRCBillId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetATRCBillById>("GetATRCBillById", aTRCBillIdParameter);
    }


    public virtual ObjectResult<GetAllJSBills> GetAllJSBills(Nullable<int> aTRCId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<bool> isPaid)
    {

        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));


        var isPaidParameter = isPaid.HasValue ?
            new ObjectParameter("IsPaid", isPaid) :
            new ObjectParameter("IsPaid", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllJSBills>("GetAllJSBills", aTRCIdParameter, fromDateParameter, toDateParameter, isPaidParameter);
    }


    public virtual ObjectResult<GetJSBillById> GetJSBillById(Nullable<int> jSBillId)
    {

        var jSBillIdParameter = jSBillId.HasValue ?
            new ObjectParameter("JSBillId", jSBillId) :
            new ObjectParameter("JSBillId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetJSBillById>("GetJSBillById", jSBillIdParameter);
    }


    public virtual ObjectResult<PayAtATRCBillingToJuststay> PayAtATRCBillingToJuststay(Nullable<int> aTRCId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate)
    {

        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));


        var todateParameter = todate.HasValue ?
            new ObjectParameter("Todate", todate) :
            new ObjectParameter("Todate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PayAtATRCBillingToJuststay>("PayAtATRCBillingToJuststay", aTRCIdParameter, fromDateParameter, todateParameter);
    }


    public virtual ObjectResult<GetAdminDashboardDetails> GetAdminDashboardDetails()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAdminDashboardDetails>("GetAdminDashboardDetails");
    }


    public virtual ObjectResult<GetTodaysBooking> GetTodaysBooking()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTodaysBooking>("GetTodaysBooking");
    }


    public virtual ObjectResult<GetAllBooking> GetAllBooking(Nullable<int> aTRCId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> todate, Nullable<int> userid, string search)
    {

        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));


        var todateParameter = todate.HasValue ?
            new ObjectParameter("Todate", todate) :
            new ObjectParameter("Todate", typeof(System.DateTime));


        var useridParameter = userid.HasValue ?
            new ObjectParameter("Userid", userid) :
            new ObjectParameter("Userid", typeof(int));


        var searchParameter = search != null ?
            new ObjectParameter("Search", search) :
            new ObjectParameter("Search", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllBooking>("GetAllBooking", aTRCIdParameter, fromDateParameter, todateParameter, useridParameter, searchParameter);
    }


    public virtual ObjectResult<GetAllATRC_Report> GetAllATRC_Report(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string search)
    {

        var fromdateParameter = fromdate.HasValue ?
            new ObjectParameter("Fromdate", fromdate) :
            new ObjectParameter("Fromdate", typeof(System.DateTime));


        var todateParameter = todate.HasValue ?
            new ObjectParameter("Todate", todate) :
            new ObjectParameter("Todate", typeof(System.DateTime));


        var searchParameter = search != null ?
            new ObjectParameter("Search", search) :
            new ObjectParameter("Search", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllATRC_Report>("GetAllATRC_Report", fromdateParameter, todateParameter, searchParameter);
    }


    public virtual ObjectResult<GetAllCancelBookings_Report> GetAllCancelBookings_Report(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string search, string bookingType, Nullable<int> aTRCId)
    {

        var fromdateParameter = fromdate.HasValue ?
            new ObjectParameter("Fromdate", fromdate) :
            new ObjectParameter("Fromdate", typeof(System.DateTime));


        var todateParameter = todate.HasValue ?
            new ObjectParameter("Todate", todate) :
            new ObjectParameter("Todate", typeof(System.DateTime));


        var searchParameter = search != null ?
            new ObjectParameter("Search", search) :
            new ObjectParameter("Search", typeof(string));


        var bookingTypeParameter = bookingType != null ?
            new ObjectParameter("BookingType", bookingType) :
            new ObjectParameter("BookingType", typeof(string));


        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCancelBookings_Report>("GetAllCancelBookings_Report", fromdateParameter, todateParameter, searchParameter, bookingTypeParameter, aTRCIdParameter);
    }


    public virtual ObjectResult<GetAllCustomer_Report> GetAllCustomer_Report(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string search)
    {

        var fromdateParameter = fromdate.HasValue ?
            new ObjectParameter("Fromdate", fromdate) :
            new ObjectParameter("Fromdate", typeof(System.DateTime));


        var todateParameter = todate.HasValue ?
            new ObjectParameter("Todate", todate) :
            new ObjectParameter("Todate", typeof(System.DateTime));


        var searchParameter = search != null ?
            new ObjectParameter("Search", search) :
            new ObjectParameter("Search", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllCustomer_Report>("GetAllCustomer_Report", fromdateParameter, todateParameter, searchParameter);
    }


    public virtual ObjectResult<GetAllJSBills_Report> GetAllJSBills_Report(Nullable<int> aTRCId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<bool> isPaid)
    {

        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));


        var isPaidParameter = isPaid.HasValue ?
            new ObjectParameter("IsPaid", isPaid) :
            new ObjectParameter("IsPaid", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllJSBills_Report>("GetAllJSBills_Report", aTRCIdParameter, fromDateParameter, toDateParameter, isPaidParameter);
    }


    public virtual ObjectResult<GetAllRefundTrasactions_Report> GetAllRefundTrasactions_Report(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string search, string bookingType, Nullable<int> aTRCId)
    {

        var fromdateParameter = fromdate.HasValue ?
            new ObjectParameter("Fromdate", fromdate) :
            new ObjectParameter("Fromdate", typeof(System.DateTime));


        var todateParameter = todate.HasValue ?
            new ObjectParameter("Todate", todate) :
            new ObjectParameter("Todate", typeof(System.DateTime));


        var searchParameter = search != null ?
            new ObjectParameter("Search", search) :
            new ObjectParameter("Search", typeof(string));


        var bookingTypeParameter = bookingType != null ?
            new ObjectParameter("BookingType", bookingType) :
            new ObjectParameter("BookingType", typeof(string));


        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllRefundTrasactions_Report>("GetAllRefundTrasactions_Report", fromdateParameter, todateParameter, searchParameter, bookingTypeParameter, aTRCIdParameter);
    }


    public virtual ObjectResult<GetAllTrasaction_Report> GetAllTrasaction_Report(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string search, string bookingType, Nullable<int> aTRCId)
    {

        var fromdateParameter = fromdate.HasValue ?
            new ObjectParameter("Fromdate", fromdate) :
            new ObjectParameter("Fromdate", typeof(System.DateTime));


        var todateParameter = todate.HasValue ?
            new ObjectParameter("Todate", todate) :
            new ObjectParameter("Todate", typeof(System.DateTime));


        var searchParameter = search != null ?
            new ObjectParameter("Search", search) :
            new ObjectParameter("Search", typeof(string));


        var bookingTypeParameter = bookingType != null ?
            new ObjectParameter("BookingType", bookingType) :
            new ObjectParameter("BookingType", typeof(string));


        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllTrasaction_Report>("GetAllTrasaction_Report", fromdateParameter, todateParameter, searchParameter, bookingTypeParameter, aTRCIdParameter);
    }


    public virtual ObjectResult<GetAllUserDetail_Report> GetAllUserDetail_Report(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
    {

        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllUserDetail_Report>("GetAllUserDetail_Report", fromDateParameter, toDateParameter);
    }


    public virtual ObjectResult<ATRCProfile> GetATRCProfile(Nullable<int> aTRCId)
    {

        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ATRCProfile>("GetATRCProfile", aTRCIdParameter);
    }


    public virtual ObjectResult<GetATRCDashboardDetails> GetATRCDashboardDetails(Nullable<int> aTRCId)
    {

        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetATRCDashboardDetails>("GetATRCDashboardDetails", aTRCIdParameter);
    }


    public virtual ObjectResult<GetATRCTodaysBooking> GetATRCTodaysBooking(Nullable<int> aTRCId)
    {

        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetATRCTodaysBooking>("GetATRCTodaysBooking", aTRCIdParameter);
    }


    public virtual ObjectResult<AndroGetATRCProfile> AndroGetATRCProfile(Nullable<int> aTRCId)
    {

        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AndroGetATRCProfile>("AndroGetATRCProfile", aTRCIdParameter);
    }


    public virtual ObjectResult<GetBookingReceipt> GetBookingReceipt(Nullable<int> restChairBookingId)
    {

        var restChairBookingIdParameter = restChairBookingId.HasValue ?
            new ObjectParameter("RestChairBookingId", restChairBookingId) :
            new ObjectParameter("RestChairBookingId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBookingReceipt>("GetBookingReceipt", restChairBookingIdParameter);
    }


    public virtual ObjectResult<GetAllBooking_Report> GetAllBooking_Report(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, string search, string bookingType, Nullable<int> aTRCId)
    {

        var fromdateParameter = fromdate.HasValue ?
            new ObjectParameter("Fromdate", fromdate) :
            new ObjectParameter("Fromdate", typeof(System.DateTime));


        var todateParameter = todate.HasValue ?
            new ObjectParameter("Todate", todate) :
            new ObjectParameter("Todate", typeof(System.DateTime));


        var searchParameter = search != null ?
            new ObjectParameter("Search", search) :
            new ObjectParameter("Search", typeof(string));


        var bookingTypeParameter = bookingType != null ?
            new ObjectParameter("BookingType", bookingType) :
            new ObjectParameter("BookingType", typeof(string));


        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllBooking_Report>("GetAllBooking_Report", fromdateParameter, todateParameter, searchParameter, bookingTypeParameter, aTRCIdParameter);
    }


    public virtual ObjectResult<GetAllATRCBills_Report> GetAllATRCBills_Report(Nullable<int> aTRCId, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, Nullable<bool> isPaid)
    {

        var aTRCIdParameter = aTRCId.HasValue ?
            new ObjectParameter("ATRCId", aTRCId) :
            new ObjectParameter("ATRCId", typeof(int));


        var fromDateParameter = fromDate.HasValue ?
            new ObjectParameter("FromDate", fromDate) :
            new ObjectParameter("FromDate", typeof(System.DateTime));


        var toDateParameter = toDate.HasValue ?
            new ObjectParameter("ToDate", toDate) :
            new ObjectParameter("ToDate", typeof(System.DateTime));


        var isPaidParameter = isPaid.HasValue ?
            new ObjectParameter("IsPaid", isPaid) :
            new ObjectParameter("IsPaid", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllATRCBills_Report>("GetAllATRCBills_Report", aTRCIdParameter, fromDateParameter, toDateParameter, isPaidParameter);
    }

}

}

