//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JustStay.Web.MasterServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MasterServiceReference.IMastersService")]
    public interface IMastersService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetAllCuisines", ReplyAction="http://tempuri.org/IMastersService/GetAllCuisinesResponse")]
        JustStay.Services.DTO.CuisineDto[] GetAllCuisines();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetAllCuisines", ReplyAction="http://tempuri.org/IMastersService/GetAllCuisinesResponse")]
        System.Threading.Tasks.Task<JustStay.Services.DTO.CuisineDto[]> GetAllCuisinesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/InsertCuisine", ReplyAction="http://tempuri.org/IMastersService/InsertCuisineResponse")]
        void InsertCuisine(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/InsertCuisine", ReplyAction="http://tempuri.org/IMastersService/InsertCuisineResponse")]
        System.Threading.Tasks.Task InsertCuisineAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/UpdateCusines", ReplyAction="http://tempuri.org/IMastersService/UpdateCusinesResponse")]
        void UpdateCusines(JustStay.Services.DTO.CuisineDto cuisineDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/UpdateCusines", ReplyAction="http://tempuri.org/IMastersService/UpdateCusinesResponse")]
        System.Threading.Tasks.Task UpdateCusinesAsync(JustStay.Services.DTO.CuisineDto cuisineDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/DeleteCuisine", ReplyAction="http://tempuri.org/IMastersService/DeleteCuisineResponse")]
        void DeleteCuisine(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/DeleteCuisine", ReplyAction="http://tempuri.org/IMastersService/DeleteCuisineResponse")]
        System.Threading.Tasks.Task DeleteCuisineAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetAllAmenities", ReplyAction="http://tempuri.org/IMastersService/GetAllAmenitiesResponse")]
        JustStay.Services.DTO.AmenityDto[] GetAllAmenities(int catId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetAllAmenities", ReplyAction="http://tempuri.org/IMastersService/GetAllAmenitiesResponse")]
        System.Threading.Tasks.Task<JustStay.Services.DTO.AmenityDto[]> GetAllAmenitiesAsync(int catId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetAmenityById", ReplyAction="http://tempuri.org/IMastersService/GetAmenityByIdResponse")]
        JustStay.Services.DTO.AmenityDto GetAmenityById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetAmenityById", ReplyAction="http://tempuri.org/IMastersService/GetAmenityByIdResponse")]
        System.Threading.Tasks.Task<JustStay.Services.DTO.AmenityDto> GetAmenityByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/InsertAmenity", ReplyAction="http://tempuri.org/IMastersService/InsertAmenityResponse")]
        int InsertAmenity(JustStay.Services.DTO.AmenityDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/InsertAmenity", ReplyAction="http://tempuri.org/IMastersService/InsertAmenityResponse")]
        System.Threading.Tasks.Task<int> InsertAmenityAsync(JustStay.Services.DTO.AmenityDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/UpdateAmenity", ReplyAction="http://tempuri.org/IMastersService/UpdateAmenityResponse")]
        void UpdateAmenity(JustStay.Services.DTO.AmenityDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/UpdateAmenity", ReplyAction="http://tempuri.org/IMastersService/UpdateAmenityResponse")]
        System.Threading.Tasks.Task UpdateAmenityAsync(JustStay.Services.DTO.AmenityDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/UpdateAmenityIcon", ReplyAction="http://tempuri.org/IMastersService/UpdateAmenityIconResponse")]
        void UpdateAmenityIcon(JustStay.Services.DTO.AmenityDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/UpdateAmenityIcon", ReplyAction="http://tempuri.org/IMastersService/UpdateAmenityIconResponse")]
        System.Threading.Tasks.Task UpdateAmenityIconAsync(JustStay.Services.DTO.AmenityDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/DeleteAmenity", ReplyAction="http://tempuri.org/IMastersService/DeleteAmenityResponse")]
        void DeleteAmenity(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/DeleteAmenity", ReplyAction="http://tempuri.org/IMastersService/DeleteAmenityResponse")]
        System.Threading.Tasks.Task DeleteAmenityAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetAllHighlights", ReplyAction="http://tempuri.org/IMastersService/GetAllHighlightsResponse")]
        JustStay.Services.DTO.HighlightDto[] GetAllHighlights();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetAllHighlights", ReplyAction="http://tempuri.org/IMastersService/GetAllHighlightsResponse")]
        System.Threading.Tasks.Task<JustStay.Services.DTO.HighlightDto[]> GetAllHighlightsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/InsertHighlight", ReplyAction="http://tempuri.org/IMastersService/InsertHighlightResponse")]
        void InsertHighlight(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/InsertHighlight", ReplyAction="http://tempuri.org/IMastersService/InsertHighlightResponse")]
        System.Threading.Tasks.Task InsertHighlightAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/UpdateHighlight", ReplyAction="http://tempuri.org/IMastersService/UpdateHighlightResponse")]
        void UpdateHighlight(JustStay.Services.DTO.HighlightDto hightlightDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/UpdateHighlight", ReplyAction="http://tempuri.org/IMastersService/UpdateHighlightResponse")]
        System.Threading.Tasks.Task UpdateHighlightAsync(JustStay.Services.DTO.HighlightDto hightlightDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/DeleteHighlight", ReplyAction="http://tempuri.org/IMastersService/DeleteHighlightResponse")]
        void DeleteHighlight(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/DeleteHighlight", ReplyAction="http://tempuri.org/IMastersService/DeleteHighlightResponse")]
        System.Threading.Tasks.Task DeleteHighlightAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetAllRCTypes", ReplyAction="http://tempuri.org/IMastersService/GetAllRCTypesResponse")]
        JustStay.Services.DTO.TypeDto[] GetAllRCTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetAllRCTypes", ReplyAction="http://tempuri.org/IMastersService/GetAllRCTypesResponse")]
        System.Threading.Tasks.Task<JustStay.Services.DTO.TypeDto[]> GetAllRCTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetRCTypeId", ReplyAction="http://tempuri.org/IMastersService/GetRCTypeIdResponse")]
        JustStay.Services.DTO.TypeDto GetRCTypeId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetRCTypeId", ReplyAction="http://tempuri.org/IMastersService/GetRCTypeIdResponse")]
        System.Threading.Tasks.Task<JustStay.Services.DTO.TypeDto> GetRCTypeIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/InsertRCType", ReplyAction="http://tempuri.org/IMastersService/InsertRCTypeResponse")]
        void InsertRCType(JustStay.Services.DTO.TypeDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/InsertRCType", ReplyAction="http://tempuri.org/IMastersService/InsertRCTypeResponse")]
        System.Threading.Tasks.Task InsertRCTypeAsync(JustStay.Services.DTO.TypeDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/UpdateRCType", ReplyAction="http://tempuri.org/IMastersService/UpdateRCTypeResponse")]
        void UpdateRCType(JustStay.Services.DTO.TypeDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/UpdateRCType", ReplyAction="http://tempuri.org/IMastersService/UpdateRCTypeResponse")]
        System.Threading.Tasks.Task UpdateRCTypeAsync(JustStay.Services.DTO.TypeDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/DeleteRCType", ReplyAction="http://tempuri.org/IMastersService/DeleteRCTypeResponse")]
        void DeleteRCType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/DeleteRCType", ReplyAction="http://tempuri.org/IMastersService/DeleteRCTypeResponse")]
        System.Threading.Tasks.Task DeleteRCTypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetAllATRCTypes", ReplyAction="http://tempuri.org/IMastersService/GetAllATRCTypesResponse")]
        JustStay.Services.DTO.TypeDto[] GetAllATRCTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetAllATRCTypes", ReplyAction="http://tempuri.org/IMastersService/GetAllATRCTypesResponse")]
        System.Threading.Tasks.Task<JustStay.Services.DTO.TypeDto[]> GetAllATRCTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetATRCTypeById", ReplyAction="http://tempuri.org/IMastersService/GetATRCTypeByIdResponse")]
        JustStay.Services.DTO.TypeDto GetATRCTypeById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetATRCTypeById", ReplyAction="http://tempuri.org/IMastersService/GetATRCTypeByIdResponse")]
        System.Threading.Tasks.Task<JustStay.Services.DTO.TypeDto> GetATRCTypeByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/InsertATRCType", ReplyAction="http://tempuri.org/IMastersService/InsertATRCTypeResponse")]
        void InsertATRCType(JustStay.Services.DTO.TypeDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/InsertATRCType", ReplyAction="http://tempuri.org/IMastersService/InsertATRCTypeResponse")]
        System.Threading.Tasks.Task InsertATRCTypeAsync(JustStay.Services.DTO.TypeDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/UpdateATRCType", ReplyAction="http://tempuri.org/IMastersService/UpdateATRCTypeResponse")]
        void UpdateATRCType(JustStay.Services.DTO.TypeDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/UpdateATRCType", ReplyAction="http://tempuri.org/IMastersService/UpdateATRCTypeResponse")]
        System.Threading.Tasks.Task UpdateATRCTypeAsync(JustStay.Services.DTO.TypeDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/DeleteATRCType", ReplyAction="http://tempuri.org/IMastersService/DeleteATRCTypeResponse")]
        void DeleteATRCType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/DeleteATRCType", ReplyAction="http://tempuri.org/IMastersService/DeleteATRCTypeResponse")]
        System.Threading.Tasks.Task DeleteATRCTypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetAllRoomTypes", ReplyAction="http://tempuri.org/IMastersService/GetAllRoomTypesResponse")]
        JustStay.Services.DTO.TypeDto[] GetAllRoomTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetAllRoomTypes", ReplyAction="http://tempuri.org/IMastersService/GetAllRoomTypesResponse")]
        System.Threading.Tasks.Task<JustStay.Services.DTO.TypeDto[]> GetAllRoomTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetRoomTypeById", ReplyAction="http://tempuri.org/IMastersService/GetRoomTypeByIdResponse")]
        JustStay.Services.DTO.TypeDto GetRoomTypeById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetRoomTypeById", ReplyAction="http://tempuri.org/IMastersService/GetRoomTypeByIdResponse")]
        System.Threading.Tasks.Task<JustStay.Services.DTO.TypeDto> GetRoomTypeByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/InsertRoomType", ReplyAction="http://tempuri.org/IMastersService/InsertRoomTypeResponse")]
        void InsertRoomType(JustStay.Services.DTO.TypeDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/InsertRoomType", ReplyAction="http://tempuri.org/IMastersService/InsertRoomTypeResponse")]
        System.Threading.Tasks.Task InsertRoomTypeAsync(JustStay.Services.DTO.TypeDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/UpdateRoomType", ReplyAction="http://tempuri.org/IMastersService/UpdateRoomTypeResponse")]
        void UpdateRoomType(JustStay.Services.DTO.TypeDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/UpdateRoomType", ReplyAction="http://tempuri.org/IMastersService/UpdateRoomTypeResponse")]
        System.Threading.Tasks.Task UpdateRoomTypeAsync(JustStay.Services.DTO.TypeDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/DeleteRoomType", ReplyAction="http://tempuri.org/IMastersService/DeleteRoomTypeResponse")]
        void DeleteRoomType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/DeleteRoomType", ReplyAction="http://tempuri.org/IMastersService/DeleteRoomTypeResponse")]
        System.Threading.Tasks.Task DeleteRoomTypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetAllRoomLabels", ReplyAction="http://tempuri.org/IMastersService/GetAllRoomLabelsResponse")]
        JustStay.Services.DTO.RoomLabelDto[] GetAllRoomLabels();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetAllRoomLabels", ReplyAction="http://tempuri.org/IMastersService/GetAllRoomLabelsResponse")]
        System.Threading.Tasks.Task<JustStay.Services.DTO.RoomLabelDto[]> GetAllRoomLabelsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetRoomLabelById", ReplyAction="http://tempuri.org/IMastersService/GetRoomLabelByIdResponse")]
        JustStay.Services.DTO.RoomLabelDto GetRoomLabelById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/GetRoomLabelById", ReplyAction="http://tempuri.org/IMastersService/GetRoomLabelByIdResponse")]
        System.Threading.Tasks.Task<JustStay.Services.DTO.RoomLabelDto> GetRoomLabelByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/InsertRoomLabel", ReplyAction="http://tempuri.org/IMastersService/InsertRoomLabelResponse")]
        int InsertRoomLabel(JustStay.Services.DTO.RoomLabelDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/InsertRoomLabel", ReplyAction="http://tempuri.org/IMastersService/InsertRoomLabelResponse")]
        System.Threading.Tasks.Task<int> InsertRoomLabelAsync(JustStay.Services.DTO.RoomLabelDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/UpdateRoomLabel", ReplyAction="http://tempuri.org/IMastersService/UpdateRoomLabelResponse")]
        void UpdateRoomLabel(JustStay.Services.DTO.RoomLabelDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/UpdateRoomLabel", ReplyAction="http://tempuri.org/IMastersService/UpdateRoomLabelResponse")]
        System.Threading.Tasks.Task UpdateRoomLabelAsync(JustStay.Services.DTO.RoomLabelDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/UpdateRoomLabelIcon", ReplyAction="http://tempuri.org/IMastersService/UpdateRoomLabelIconResponse")]
        void UpdateRoomLabelIcon(JustStay.Services.DTO.RoomLabelDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/UpdateRoomLabelIcon", ReplyAction="http://tempuri.org/IMastersService/UpdateRoomLabelIconResponse")]
        System.Threading.Tasks.Task UpdateRoomLabelIconAsync(JustStay.Services.DTO.RoomLabelDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/DeleteRoomLabel", ReplyAction="http://tempuri.org/IMastersService/DeleteRoomLabelResponse")]
        void DeleteRoomLabel(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMastersService/DeleteRoomLabel", ReplyAction="http://tempuri.org/IMastersService/DeleteRoomLabelResponse")]
        System.Threading.Tasks.Task DeleteRoomLabelAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMastersServiceChannel : JustStay.Web.MasterServiceReference.IMastersService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MastersServiceClient : System.ServiceModel.ClientBase<JustStay.Web.MasterServiceReference.IMastersService>, JustStay.Web.MasterServiceReference.IMastersService {
        
        public MastersServiceClient() {
        }
        
        public MastersServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MastersServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MastersServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MastersServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public JustStay.Services.DTO.CuisineDto[] GetAllCuisines() {
            return base.Channel.GetAllCuisines();
        }
        
        public System.Threading.Tasks.Task<JustStay.Services.DTO.CuisineDto[]> GetAllCuisinesAsync() {
            return base.Channel.GetAllCuisinesAsync();
        }
        
        public void InsertCuisine(string name) {
            base.Channel.InsertCuisine(name);
        }
        
        public System.Threading.Tasks.Task InsertCuisineAsync(string name) {
            return base.Channel.InsertCuisineAsync(name);
        }
        
        public void UpdateCusines(JustStay.Services.DTO.CuisineDto cuisineDto) {
            base.Channel.UpdateCusines(cuisineDto);
        }
        
        public System.Threading.Tasks.Task UpdateCusinesAsync(JustStay.Services.DTO.CuisineDto cuisineDto) {
            return base.Channel.UpdateCusinesAsync(cuisineDto);
        }
        
        public void DeleteCuisine(int id) {
            base.Channel.DeleteCuisine(id);
        }
        
        public System.Threading.Tasks.Task DeleteCuisineAsync(int id) {
            return base.Channel.DeleteCuisineAsync(id);
        }
        
        public JustStay.Services.DTO.AmenityDto[] GetAllAmenities(int catId) {
            return base.Channel.GetAllAmenities(catId);
        }
        
        public System.Threading.Tasks.Task<JustStay.Services.DTO.AmenityDto[]> GetAllAmenitiesAsync(int catId) {
            return base.Channel.GetAllAmenitiesAsync(catId);
        }
        
        public JustStay.Services.DTO.AmenityDto GetAmenityById(int id) {
            return base.Channel.GetAmenityById(id);
        }
        
        public System.Threading.Tasks.Task<JustStay.Services.DTO.AmenityDto> GetAmenityByIdAsync(int id) {
            return base.Channel.GetAmenityByIdAsync(id);
        }
        
        public int InsertAmenity(JustStay.Services.DTO.AmenityDto dto) {
            return base.Channel.InsertAmenity(dto);
        }
        
        public System.Threading.Tasks.Task<int> InsertAmenityAsync(JustStay.Services.DTO.AmenityDto dto) {
            return base.Channel.InsertAmenityAsync(dto);
        }
        
        public void UpdateAmenity(JustStay.Services.DTO.AmenityDto dto) {
            base.Channel.UpdateAmenity(dto);
        }
        
        public System.Threading.Tasks.Task UpdateAmenityAsync(JustStay.Services.DTO.AmenityDto dto) {
            return base.Channel.UpdateAmenityAsync(dto);
        }
        
        public void UpdateAmenityIcon(JustStay.Services.DTO.AmenityDto dto) {
            base.Channel.UpdateAmenityIcon(dto);
        }
        
        public System.Threading.Tasks.Task UpdateAmenityIconAsync(JustStay.Services.DTO.AmenityDto dto) {
            return base.Channel.UpdateAmenityIconAsync(dto);
        }
        
        public void DeleteAmenity(int id) {
            base.Channel.DeleteAmenity(id);
        }
        
        public System.Threading.Tasks.Task DeleteAmenityAsync(int id) {
            return base.Channel.DeleteAmenityAsync(id);
        }
        
        public JustStay.Services.DTO.HighlightDto[] GetAllHighlights() {
            return base.Channel.GetAllHighlights();
        }
        
        public System.Threading.Tasks.Task<JustStay.Services.DTO.HighlightDto[]> GetAllHighlightsAsync() {
            return base.Channel.GetAllHighlightsAsync();
        }
        
        public void InsertHighlight(string name) {
            base.Channel.InsertHighlight(name);
        }
        
        public System.Threading.Tasks.Task InsertHighlightAsync(string name) {
            return base.Channel.InsertHighlightAsync(name);
        }
        
        public void UpdateHighlight(JustStay.Services.DTO.HighlightDto hightlightDto) {
            base.Channel.UpdateHighlight(hightlightDto);
        }
        
        public System.Threading.Tasks.Task UpdateHighlightAsync(JustStay.Services.DTO.HighlightDto hightlightDto) {
            return base.Channel.UpdateHighlightAsync(hightlightDto);
        }
        
        public void DeleteHighlight(int id) {
            base.Channel.DeleteHighlight(id);
        }
        
        public System.Threading.Tasks.Task DeleteHighlightAsync(int id) {
            return base.Channel.DeleteHighlightAsync(id);
        }
        
        public JustStay.Services.DTO.TypeDto[] GetAllRCTypes() {
            return base.Channel.GetAllRCTypes();
        }
        
        public System.Threading.Tasks.Task<JustStay.Services.DTO.TypeDto[]> GetAllRCTypesAsync() {
            return base.Channel.GetAllRCTypesAsync();
        }
        
        public JustStay.Services.DTO.TypeDto GetRCTypeId(int id) {
            return base.Channel.GetRCTypeId(id);
        }
        
        public System.Threading.Tasks.Task<JustStay.Services.DTO.TypeDto> GetRCTypeIdAsync(int id) {
            return base.Channel.GetRCTypeIdAsync(id);
        }
        
        public void InsertRCType(JustStay.Services.DTO.TypeDto dto) {
            base.Channel.InsertRCType(dto);
        }
        
        public System.Threading.Tasks.Task InsertRCTypeAsync(JustStay.Services.DTO.TypeDto dto) {
            return base.Channel.InsertRCTypeAsync(dto);
        }
        
        public void UpdateRCType(JustStay.Services.DTO.TypeDto dto) {
            base.Channel.UpdateRCType(dto);
        }
        
        public System.Threading.Tasks.Task UpdateRCTypeAsync(JustStay.Services.DTO.TypeDto dto) {
            return base.Channel.UpdateRCTypeAsync(dto);
        }
        
        public void DeleteRCType(int id) {
            base.Channel.DeleteRCType(id);
        }
        
        public System.Threading.Tasks.Task DeleteRCTypeAsync(int id) {
            return base.Channel.DeleteRCTypeAsync(id);
        }
        
        public JustStay.Services.DTO.TypeDto[] GetAllATRCTypes() {
            return base.Channel.GetAllATRCTypes();
        }
        
        public System.Threading.Tasks.Task<JustStay.Services.DTO.TypeDto[]> GetAllATRCTypesAsync() {
            return base.Channel.GetAllATRCTypesAsync();
        }
        
        public JustStay.Services.DTO.TypeDto GetATRCTypeById(int id) {
            return base.Channel.GetATRCTypeById(id);
        }
        
        public System.Threading.Tasks.Task<JustStay.Services.DTO.TypeDto> GetATRCTypeByIdAsync(int id) {
            return base.Channel.GetATRCTypeByIdAsync(id);
        }
        
        public void InsertATRCType(JustStay.Services.DTO.TypeDto dto) {
            base.Channel.InsertATRCType(dto);
        }
        
        public System.Threading.Tasks.Task InsertATRCTypeAsync(JustStay.Services.DTO.TypeDto dto) {
            return base.Channel.InsertATRCTypeAsync(dto);
        }
        
        public void UpdateATRCType(JustStay.Services.DTO.TypeDto dto) {
            base.Channel.UpdateATRCType(dto);
        }
        
        public System.Threading.Tasks.Task UpdateATRCTypeAsync(JustStay.Services.DTO.TypeDto dto) {
            return base.Channel.UpdateATRCTypeAsync(dto);
        }
        
        public void DeleteATRCType(int id) {
            base.Channel.DeleteATRCType(id);
        }
        
        public System.Threading.Tasks.Task DeleteATRCTypeAsync(int id) {
            return base.Channel.DeleteATRCTypeAsync(id);
        }
        
        public JustStay.Services.DTO.TypeDto[] GetAllRoomTypes() {
            return base.Channel.GetAllRoomTypes();
        }
        
        public System.Threading.Tasks.Task<JustStay.Services.DTO.TypeDto[]> GetAllRoomTypesAsync() {
            return base.Channel.GetAllRoomTypesAsync();
        }
        
        public JustStay.Services.DTO.TypeDto GetRoomTypeById(int id) {
            return base.Channel.GetRoomTypeById(id);
        }
        
        public System.Threading.Tasks.Task<JustStay.Services.DTO.TypeDto> GetRoomTypeByIdAsync(int id) {
            return base.Channel.GetRoomTypeByIdAsync(id);
        }
        
        public void InsertRoomType(JustStay.Services.DTO.TypeDto dto) {
            base.Channel.InsertRoomType(dto);
        }
        
        public System.Threading.Tasks.Task InsertRoomTypeAsync(JustStay.Services.DTO.TypeDto dto) {
            return base.Channel.InsertRoomTypeAsync(dto);
        }
        
        public void UpdateRoomType(JustStay.Services.DTO.TypeDto dto) {
            base.Channel.UpdateRoomType(dto);
        }
        
        public System.Threading.Tasks.Task UpdateRoomTypeAsync(JustStay.Services.DTO.TypeDto dto) {
            return base.Channel.UpdateRoomTypeAsync(dto);
        }
        
        public void DeleteRoomType(int id) {
            base.Channel.DeleteRoomType(id);
        }
        
        public System.Threading.Tasks.Task DeleteRoomTypeAsync(int id) {
            return base.Channel.DeleteRoomTypeAsync(id);
        }
        
        public JustStay.Services.DTO.RoomLabelDto[] GetAllRoomLabels() {
            return base.Channel.GetAllRoomLabels();
        }
        
        public System.Threading.Tasks.Task<JustStay.Services.DTO.RoomLabelDto[]> GetAllRoomLabelsAsync() {
            return base.Channel.GetAllRoomLabelsAsync();
        }
        
        public JustStay.Services.DTO.RoomLabelDto GetRoomLabelById(int id) {
            return base.Channel.GetRoomLabelById(id);
        }
        
        public System.Threading.Tasks.Task<JustStay.Services.DTO.RoomLabelDto> GetRoomLabelByIdAsync(int id) {
            return base.Channel.GetRoomLabelByIdAsync(id);
        }
        
        public int InsertRoomLabel(JustStay.Services.DTO.RoomLabelDto dto) {
            return base.Channel.InsertRoomLabel(dto);
        }
        
        public System.Threading.Tasks.Task<int> InsertRoomLabelAsync(JustStay.Services.DTO.RoomLabelDto dto) {
            return base.Channel.InsertRoomLabelAsync(dto);
        }
        
        public void UpdateRoomLabel(JustStay.Services.DTO.RoomLabelDto dto) {
            base.Channel.UpdateRoomLabel(dto);
        }
        
        public System.Threading.Tasks.Task UpdateRoomLabelAsync(JustStay.Services.DTO.RoomLabelDto dto) {
            return base.Channel.UpdateRoomLabelAsync(dto);
        }
        
        public void UpdateRoomLabelIcon(JustStay.Services.DTO.RoomLabelDto dto) {
            base.Channel.UpdateRoomLabelIcon(dto);
        }
        
        public System.Threading.Tasks.Task UpdateRoomLabelIconAsync(JustStay.Services.DTO.RoomLabelDto dto) {
            return base.Channel.UpdateRoomLabelIconAsync(dto);
        }
        
        public void DeleteRoomLabel(int id) {
            base.Channel.DeleteRoomLabel(id);
        }
        
        public System.Threading.Tasks.Task DeleteRoomLabelAsync(int id) {
            return base.Channel.DeleteRoomLabelAsync(id);
        }
    }
}
