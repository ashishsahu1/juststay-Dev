//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JustStay.Web.BlogServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlogWithDetail", Namespace="http://schemas.datacontract.org/2004/07/JustStay.Repo")]
    [System.SerializableAttribute()]
    public partial class BlogWithDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BlogCategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BlogContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BlogDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BlogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BlogImageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BlogImageNewNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BlogTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InsertedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedOnField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddedBy {
            get {
                return this.AddedByField;
            }
            set {
                if ((object.ReferenceEquals(this.AddedByField, value) != true)) {
                    this.AddedByField = value;
                    this.RaisePropertyChanged("AddedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BlogCategoryId {
            get {
                return this.BlogCategoryIdField;
            }
            set {
                if ((this.BlogCategoryIdField.Equals(value) != true)) {
                    this.BlogCategoryIdField = value;
                    this.RaisePropertyChanged("BlogCategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BlogContent {
            get {
                return this.BlogContentField;
            }
            set {
                if ((object.ReferenceEquals(this.BlogContentField, value) != true)) {
                    this.BlogContentField = value;
                    this.RaisePropertyChanged("BlogContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BlogDate {
            get {
                return this.BlogDateField;
            }
            set {
                if ((this.BlogDateField.Equals(value) != true)) {
                    this.BlogDateField = value;
                    this.RaisePropertyChanged("BlogDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BlogId {
            get {
                return this.BlogIdField;
            }
            set {
                if ((this.BlogIdField.Equals(value) != true)) {
                    this.BlogIdField = value;
                    this.RaisePropertyChanged("BlogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BlogImageName {
            get {
                return this.BlogImageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BlogImageNameField, value) != true)) {
                    this.BlogImageNameField = value;
                    this.RaisePropertyChanged("BlogImageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BlogImageNewName {
            get {
                return this.BlogImageNewNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BlogImageNewNameField, value) != true)) {
                    this.BlogImageNewNameField = value;
                    this.RaisePropertyChanged("BlogImageNewName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BlogTitle {
            get {
                return this.BlogTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.BlogTitleField, value) != true)) {
                    this.BlogTitleField = value;
                    this.RaisePropertyChanged("BlogTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InsertedOn {
            get {
                return this.InsertedOnField;
            }
            set {
                if ((this.InsertedOnField.Equals(value) != true)) {
                    this.InsertedOnField = value;
                    this.RaisePropertyChanged("InsertedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedOn {
            get {
                return this.UpdatedOnField;
            }
            set {
                if ((this.UpdatedOnField.Equals(value) != true)) {
                    this.UpdatedOnField = value;
                    this.RaisePropertyChanged("UpdatedOn");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BlogServiceReference.IBlogService")]
    public interface IBlogService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlogs", ReplyAction="http://tempuri.org/IBlogService/GetBlogsResponse")]
        JustStay.Services.DTO.BlogDto[] GetBlogs(int blogCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlogs", ReplyAction="http://tempuri.org/IBlogService/GetBlogsResponse")]
        System.Threading.Tasks.Task<JustStay.Services.DTO.BlogDto[]> GetBlogsAsync(int blogCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlogsWithDetail", ReplyAction="http://tempuri.org/IBlogService/GetBlogsWithDetailResponse")]
        JustStay.Web.BlogServiceReference.BlogWithDetail[] GetBlogsWithDetail();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlogsWithDetail", ReplyAction="http://tempuri.org/IBlogService/GetBlogsWithDetailResponse")]
        System.Threading.Tasks.Task<JustStay.Web.BlogServiceReference.BlogWithDetail[]> GetBlogsWithDetailAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlogById", ReplyAction="http://tempuri.org/IBlogService/GetBlogByIdResponse")]
        JustStay.Services.DTO.BlogDto GetBlogById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlogById", ReplyAction="http://tempuri.org/IBlogService/GetBlogByIdResponse")]
        System.Threading.Tasks.Task<JustStay.Services.DTO.BlogDto> GetBlogByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/InsertBlog", ReplyAction="http://tempuri.org/IBlogService/InsertBlogResponse")]
        int InsertBlog(JustStay.Services.DTO.BlogDto blogDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/InsertBlog", ReplyAction="http://tempuri.org/IBlogService/InsertBlogResponse")]
        System.Threading.Tasks.Task<int> InsertBlogAsync(JustStay.Services.DTO.BlogDto blogDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/UpdateBlog", ReplyAction="http://tempuri.org/IBlogService/UpdateBlogResponse")]
        void UpdateBlog(JustStay.Services.DTO.BlogDto blogDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/UpdateBlog", ReplyAction="http://tempuri.org/IBlogService/UpdateBlogResponse")]
        System.Threading.Tasks.Task UpdateBlogAsync(JustStay.Services.DTO.BlogDto blogDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/UpdateBlogImage", ReplyAction="http://tempuri.org/IBlogService/UpdateBlogImageResponse")]
        void UpdateBlogImage(JustStay.Services.DTO.BlogDto blogDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/UpdateBlogImage", ReplyAction="http://tempuri.org/IBlogService/UpdateBlogImageResponse")]
        System.Threading.Tasks.Task UpdateBlogImageAsync(JustStay.Services.DTO.BlogDto blogDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/DeletBlog", ReplyAction="http://tempuri.org/IBlogService/DeletBlogResponse")]
        void DeletBlog(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/DeletBlog", ReplyAction="http://tempuri.org/IBlogService/DeletBlogResponse")]
        System.Threading.Tasks.Task DeletBlogAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlogCategories", ReplyAction="http://tempuri.org/IBlogService/GetBlogCategoriesResponse")]
        JustStay.Services.DTO.BlogCatgoryDto[] GetBlogCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlogCategories", ReplyAction="http://tempuri.org/IBlogService/GetBlogCategoriesResponse")]
        System.Threading.Tasks.Task<JustStay.Services.DTO.BlogCatgoryDto[]> GetBlogCategoriesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBlogServiceChannel : JustStay.Web.BlogServiceReference.IBlogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BlogServiceClient : System.ServiceModel.ClientBase<JustStay.Web.BlogServiceReference.IBlogService>, JustStay.Web.BlogServiceReference.IBlogService {
        
        public BlogServiceClient() {
        }
        
        public BlogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BlogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public JustStay.Services.DTO.BlogDto[] GetBlogs(int blogCategoryId) {
            return base.Channel.GetBlogs(blogCategoryId);
        }
        
        public System.Threading.Tasks.Task<JustStay.Services.DTO.BlogDto[]> GetBlogsAsync(int blogCategoryId) {
            return base.Channel.GetBlogsAsync(blogCategoryId);
        }
        
        public JustStay.Web.BlogServiceReference.BlogWithDetail[] GetBlogsWithDetail() {
            return base.Channel.GetBlogsWithDetail();
        }
        
        public System.Threading.Tasks.Task<JustStay.Web.BlogServiceReference.BlogWithDetail[]> GetBlogsWithDetailAsync() {
            return base.Channel.GetBlogsWithDetailAsync();
        }
        
        public JustStay.Services.DTO.BlogDto GetBlogById(int id) {
            return base.Channel.GetBlogById(id);
        }
        
        public System.Threading.Tasks.Task<JustStay.Services.DTO.BlogDto> GetBlogByIdAsync(int id) {
            return base.Channel.GetBlogByIdAsync(id);
        }
        
        public int InsertBlog(JustStay.Services.DTO.BlogDto blogDto) {
            return base.Channel.InsertBlog(blogDto);
        }
        
        public System.Threading.Tasks.Task<int> InsertBlogAsync(JustStay.Services.DTO.BlogDto blogDto) {
            return base.Channel.InsertBlogAsync(blogDto);
        }
        
        public void UpdateBlog(JustStay.Services.DTO.BlogDto blogDto) {
            base.Channel.UpdateBlog(blogDto);
        }
        
        public System.Threading.Tasks.Task UpdateBlogAsync(JustStay.Services.DTO.BlogDto blogDto) {
            return base.Channel.UpdateBlogAsync(blogDto);
        }
        
        public void UpdateBlogImage(JustStay.Services.DTO.BlogDto blogDto) {
            base.Channel.UpdateBlogImage(blogDto);
        }
        
        public System.Threading.Tasks.Task UpdateBlogImageAsync(JustStay.Services.DTO.BlogDto blogDto) {
            return base.Channel.UpdateBlogImageAsync(blogDto);
        }
        
        public void DeletBlog(int id) {
            base.Channel.DeletBlog(id);
        }
        
        public System.Threading.Tasks.Task DeletBlogAsync(int id) {
            return base.Channel.DeletBlogAsync(id);
        }
        
        public JustStay.Services.DTO.BlogCatgoryDto[] GetBlogCategories() {
            return base.Channel.GetBlogCategories();
        }
        
        public System.Threading.Tasks.Task<JustStay.Services.DTO.BlogCatgoryDto[]> GetBlogCategoriesAsync() {
            return base.Channel.GetBlogCategoriesAsync();
        }
    }
}
