//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JustStay.ATRC.MessageServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InboxMail", Namespace="http://schemas.datacontract.org/2004/07/JustStay.Repo")]
    [System.SerializableAttribute()]
    public partial class InboxMail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InsertedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UnReadField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromEmail {
            get {
                return this.FromEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.FromEmailField, value) != true)) {
                    this.FromEmailField = value;
                    this.RaisePropertyChanged("FromEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InsertedOn {
            get {
                return this.InsertedOnField;
            }
            set {
                if ((this.InsertedOnField.Equals(value) != true)) {
                    this.InsertedOnField = value;
                    this.RaisePropertyChanged("InsertedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((this.MessageIdField.Equals(value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UnRead {
            get {
                return this.UnReadField;
            }
            set {
                if ((this.UnReadField.Equals(value) != true)) {
                    this.UnReadField = value;
                    this.RaisePropertyChanged("UnRead");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessgeInfo", Namespace="http://schemas.datacontract.org/2004/07/JustStay.Repo")]
    [System.SerializableAttribute()]
    public partial class MessgeInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InsertedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InsertedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RefrenceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToEmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailBody {
            get {
                return this.EmailBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailBodyField, value) != true)) {
                    this.EmailBodyField = value;
                    this.RaisePropertyChanged("EmailBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromEmail {
            get {
                return this.FromEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.FromEmailField, value) != true)) {
                    this.FromEmailField = value;
                    this.RaisePropertyChanged("FromEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InsertedBy {
            get {
                return this.InsertedByField;
            }
            set {
                if ((this.InsertedByField.Equals(value) != true)) {
                    this.InsertedByField = value;
                    this.RaisePropertyChanged("InsertedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InsertedOn {
            get {
                return this.InsertedOnField;
            }
            set {
                if ((this.InsertedOnField.Equals(value) != true)) {
                    this.InsertedOnField = value;
                    this.RaisePropertyChanged("InsertedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((this.MessageIdField.Equals(value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RefrenceId {
            get {
                return this.RefrenceIdField;
            }
            set {
                if ((this.RefrenceIdField.Equals(value) != true)) {
                    this.RefrenceIdField = value;
                    this.RaisePropertyChanged("RefrenceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToEmail {
            get {
                return this.ToEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ToEmailField, value) != true)) {
                    this.ToEmailField = value;
                    this.RaisePropertyChanged("ToEmail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageDto", Namespace="http://schemas.datacontract.org/2004/07/JustStay.Services.DTO")]
    [System.SerializableAttribute()]
    public partial class MessageDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailBodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InsertedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InsertedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RefrenceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailBody {
            get {
                return this.EmailBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailBodyField, value) != true)) {
                    this.EmailBodyField = value;
                    this.RaisePropertyChanged("EmailBody");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InsertedBy {
            get {
                return this.InsertedByField;
            }
            set {
                if ((this.InsertedByField.Equals(value) != true)) {
                    this.InsertedByField = value;
                    this.RaisePropertyChanged("InsertedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InsertedOn {
            get {
                return this.InsertedOnField;
            }
            set {
                if ((this.InsertedOnField.Equals(value) != true)) {
                    this.InsertedOnField = value;
                    this.RaisePropertyChanged("InsertedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((this.MessageIdField.Equals(value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageSource {
            get {
                return this.MessageSourceField;
            }
            set {
                if ((this.MessageSourceField.Equals(value) != true)) {
                    this.MessageSourceField = value;
                    this.RaisePropertyChanged("MessageSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RefrenceId {
            get {
                return this.RefrenceIdField;
            }
            set {
                if ((this.RefrenceIdField.Equals(value) != true)) {
                    this.RefrenceIdField = value;
                    this.RaisePropertyChanged("RefrenceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageRecipientDto", Namespace="http://schemas.datacontract.org/2004/07/JustStay.Services.DTO")]
    [System.SerializableAttribute()]
    public partial class MessageRecipientDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InsertedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageRecipientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TrashedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UnReadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InsertedOn {
            get {
                return this.InsertedOnField;
            }
            set {
                if ((this.InsertedOnField.Equals(value) != true)) {
                    this.InsertedOnField = value;
                    this.RaisePropertyChanged("InsertedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((this.MessageIdField.Equals(value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageRecipientId {
            get {
                return this.MessageRecipientIdField;
            }
            set {
                if ((this.MessageRecipientIdField.Equals(value) != true)) {
                    this.MessageRecipientIdField = value;
                    this.RaisePropertyChanged("MessageRecipientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverType {
            get {
                return this.ReceiverTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverTypeField, value) != true)) {
                    this.ReceiverTypeField = value;
                    this.RaisePropertyChanged("ReceiverType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Trashed {
            get {
                return this.TrashedField;
            }
            set {
                if ((this.TrashedField.Equals(value) != true)) {
                    this.TrashedField = value;
                    this.RaisePropertyChanged("Trashed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UnRead {
            get {
                return this.UnReadField;
            }
            set {
                if ((this.UnReadField.Equals(value) != true)) {
                    this.UnReadField = value;
                    this.RaisePropertyChanged("UnRead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedOn {
            get {
                return this.UpdatedOnField;
            }
            set {
                if ((this.UpdatedOnField.Equals(value) != true)) {
                    this.UpdatedOnField = value;
                    this.RaisePropertyChanged("UpdatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupportRequestDetail", Namespace="http://schemas.datacontract.org/2004/07/JustStay.Repo")]
    [System.SerializableAttribute()]
    public partial class SupportRequestDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ATRCNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InsertedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ATRCName {
            get {
                return this.ATRCNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ATRCNameField, value) != true)) {
                    this.ATRCNameField = value;
                    this.RaisePropertyChanged("ATRCName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InsertedOn {
            get {
                return this.InsertedOnField;
            }
            set {
                if ((this.InsertedOnField.Equals(value) != true)) {
                    this.InsertedOnField = value;
                    this.RaisePropertyChanged("InsertedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((this.MessageIdField.Equals(value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessageServiceReference.IMessageService")]
    public interface IMessageService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/GetInboxMails", ReplyAction="http://tempuri.org/IMessageService/GetInboxMailsResponse")]
        JustStay.ATRC.MessageServiceReference.InboxMail[] GetInboxMails(string search, int userId, string mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/GetInboxMails", ReplyAction="http://tempuri.org/IMessageService/GetInboxMailsResponse")]
        System.Threading.Tasks.Task<JustStay.ATRC.MessageServiceReference.InboxMail[]> GetInboxMailsAsync(string search, int userId, string mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/GetMessageById", ReplyAction="http://tempuri.org/IMessageService/GetMessageByIdResponse")]
        JustStay.ATRC.MessageServiceReference.MessgeInfo GetMessageById(int messageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/GetMessageById", ReplyAction="http://tempuri.org/IMessageService/GetMessageByIdResponse")]
        System.Threading.Tasks.Task<JustStay.ATRC.MessageServiceReference.MessgeInfo> GetMessageByIdAsync(int messageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/InsertMessage", ReplyAction="http://tempuri.org/IMessageService/InsertMessageResponse")]
        int InsertMessage(JustStay.ATRC.MessageServiceReference.MessageDto msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/InsertMessage", ReplyAction="http://tempuri.org/IMessageService/InsertMessageResponse")]
        System.Threading.Tasks.Task<int> InsertMessageAsync(JustStay.ATRC.MessageServiceReference.MessageDto msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/UpdateReferenceId", ReplyAction="http://tempuri.org/IMessageService/UpdateReferenceIdResponse")]
        void UpdateReferenceId(int newMsgId, int refMsgId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/UpdateReferenceId", ReplyAction="http://tempuri.org/IMessageService/UpdateReferenceIdResponse")]
        System.Threading.Tasks.Task UpdateReferenceIdAsync(int newMsgId, int refMsgId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/InsertMessageRecipient", ReplyAction="http://tempuri.org/IMessageService/InsertMessageRecipientResponse")]
        void InsertMessageRecipient(JustStay.ATRC.MessageServiceReference.MessageRecipientDto rec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/InsertMessageRecipient", ReplyAction="http://tempuri.org/IMessageService/InsertMessageRecipientResponse")]
        System.Threading.Tasks.Task InsertMessageRecipientAsync(JustStay.ATRC.MessageServiceReference.MessageRecipientDto rec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/MoveUserMessageToTrash", ReplyAction="http://tempuri.org/IMessageService/MoveUserMessageToTrashResponse")]
        void MoveUserMessageToTrash(int messageId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/MoveUserMessageToTrash", ReplyAction="http://tempuri.org/IMessageService/MoveUserMessageToTrashResponse")]
        System.Threading.Tasks.Task MoveUserMessageToTrashAsync(int messageId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/MarkMailAsRead", ReplyAction="http://tempuri.org/IMessageService/MarkMailAsReadResponse")]
        void MarkMailAsRead(int msgId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/MarkMailAsRead", ReplyAction="http://tempuri.org/IMessageService/MarkMailAsReadResponse")]
        System.Threading.Tasks.Task MarkMailAsReadAsync(int msgId, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/GetAdminSupportRequests", ReplyAction="http://tempuri.org/IMessageService/GetAdminSupportRequestsResponse")]
        JustStay.ATRC.MessageServiceReference.SupportRequestDetail[] GetAdminSupportRequests();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageService/GetAdminSupportRequests", ReplyAction="http://tempuri.org/IMessageService/GetAdminSupportRequestsResponse")]
        System.Threading.Tasks.Task<JustStay.ATRC.MessageServiceReference.SupportRequestDetail[]> GetAdminSupportRequestsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessageServiceChannel : JustStay.ATRC.MessageServiceReference.IMessageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessageServiceClient : System.ServiceModel.ClientBase<JustStay.ATRC.MessageServiceReference.IMessageService>, JustStay.ATRC.MessageServiceReference.IMessageService {
        
        public MessageServiceClient() {
        }
        
        public MessageServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessageServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public JustStay.ATRC.MessageServiceReference.InboxMail[] GetInboxMails(string search, int userId, string mode) {
            return base.Channel.GetInboxMails(search, userId, mode);
        }
        
        public System.Threading.Tasks.Task<JustStay.ATRC.MessageServiceReference.InboxMail[]> GetInboxMailsAsync(string search, int userId, string mode) {
            return base.Channel.GetInboxMailsAsync(search, userId, mode);
        }
        
        public JustStay.ATRC.MessageServiceReference.MessgeInfo GetMessageById(int messageId) {
            return base.Channel.GetMessageById(messageId);
        }
        
        public System.Threading.Tasks.Task<JustStay.ATRC.MessageServiceReference.MessgeInfo> GetMessageByIdAsync(int messageId) {
            return base.Channel.GetMessageByIdAsync(messageId);
        }
        
        public int InsertMessage(JustStay.ATRC.MessageServiceReference.MessageDto msg) {
            return base.Channel.InsertMessage(msg);
        }
        
        public System.Threading.Tasks.Task<int> InsertMessageAsync(JustStay.ATRC.MessageServiceReference.MessageDto msg) {
            return base.Channel.InsertMessageAsync(msg);
        }
        
        public void UpdateReferenceId(int newMsgId, int refMsgId) {
            base.Channel.UpdateReferenceId(newMsgId, refMsgId);
        }
        
        public System.Threading.Tasks.Task UpdateReferenceIdAsync(int newMsgId, int refMsgId) {
            return base.Channel.UpdateReferenceIdAsync(newMsgId, refMsgId);
        }
        
        public void InsertMessageRecipient(JustStay.ATRC.MessageServiceReference.MessageRecipientDto rec) {
            base.Channel.InsertMessageRecipient(rec);
        }
        
        public System.Threading.Tasks.Task InsertMessageRecipientAsync(JustStay.ATRC.MessageServiceReference.MessageRecipientDto rec) {
            return base.Channel.InsertMessageRecipientAsync(rec);
        }
        
        public void MoveUserMessageToTrash(int messageId, int userId) {
            base.Channel.MoveUserMessageToTrash(messageId, userId);
        }
        
        public System.Threading.Tasks.Task MoveUserMessageToTrashAsync(int messageId, int userId) {
            return base.Channel.MoveUserMessageToTrashAsync(messageId, userId);
        }
        
        public void MarkMailAsRead(int msgId, int userId) {
            base.Channel.MarkMailAsRead(msgId, userId);
        }
        
        public System.Threading.Tasks.Task MarkMailAsReadAsync(int msgId, int userId) {
            return base.Channel.MarkMailAsReadAsync(msgId, userId);
        }
        
        public JustStay.ATRC.MessageServiceReference.SupportRequestDetail[] GetAdminSupportRequests() {
            return base.Channel.GetAdminSupportRequests();
        }
        
        public System.Threading.Tasks.Task<JustStay.ATRC.MessageServiceReference.SupportRequestDetail[]> GetAdminSupportRequestsAsync() {
            return base.Channel.GetAdminSupportRequestsAsync();
        }
    }
}
